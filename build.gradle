buildscript {
  ext {
    kotlinVersion = '1.3.50'
    moshiVersion = '1.8.0'
    jettyVersion = '9.4.19.v20190610'
    okhttpVersion = '3.12.5'
    kotlinLoggingVersion = '1.7.6'
    dokkaVersion = '0.9.18'
    junitVersion = '5.2.0'
    jsonAssert = '1.+'
    gradleRioVersion = '2019.4.1'
    bintrayVersion = '1.+'
    spotlessVersion = '3.+'
  }
  repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
    classpath "edu.wpi.first:GradleRIO:$gradleRioVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
  }
}

configure(subprojects) {
  group = 'org.strykeforce.thirdcoast'
  version = '19.4.1'

  apply plugin: 'java-library'
  apply plugin: 'idea'

  repositories {
    jcenter()
  }

  dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.25'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.+"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.+"
    testImplementation "org.assertj:assertj-core:3.+"
    testImplementation "org.mockito:mockito-junit-jupiter:2.+"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.+"
    testRuntime 'ch.qos.logback:logback-classic:1.2.3'
  }

  idea {
    module {
      downloadJavadoc = true
      downloadSources = true
      sourceDirs += files('build/generated/source/kaptKotlin/main')
      generatedSourceDirs += files('build/generated/source/kaptKotlin/main')
    }
  }

  test {
    useJUnitPlatform()
  }
}

configure(subprojects - project(":deadeye")) {
  apply plugin: "edu.wpi.first.GradleRIO"

  dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
  }
}

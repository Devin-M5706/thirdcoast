plugins {
    id "java"
    id "idea"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.5.0"
    id "org.jetbrains.kotlin.kapt" version "1.5.0"
    id "edu.wpi.first.GradleRIO" version "2021.3.1"
    id 'com.diffplug.spotless' version '5.12.4'
}

group = "org.strykeforce"
version = "21.3.0-SNAPSHOT"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url = "https://first.wpi.edu/FRC/roborio/maven/release" }
}

dependencies {
    implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)


    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "io.github.microutils:kotlin-logging:2.0.6"
    implementation "org.jetbrains.kotlinx:kotlinx-html-jvm:0.7.3"
    implementation "com.squareup.moshi:moshi:1.12.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.12.0"

    // Testing
    testImplementation platform("org.junit:junit-bom:5.7.1")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.assertj:assertj-core:3.+"
    testImplementation "org.mockito:mockito-junit-jupiter:3.+"
    testImplementation "org.skyscreamer:jsonassert:1.+"
    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.+"

    api "org.jetbrains:annotations:20.1.0"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"

        // For creation of default methods in interfaces
        freeCompilerArgs += "-Xjvm-default=all"
    }
}


java {
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

publishing {
    publications {
        thirdcoastLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url "s3://maven.strykeforce.org/repo"
            credentials(AwsCredentials) {
                accessKey "${System.getenv("STRYKEFORCE_AWS_KEY")}"
                secretKey "${System.getenv("STRYKEFORCE_AWS_SECRET")}"
            }
        }
    }
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        googleJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}
